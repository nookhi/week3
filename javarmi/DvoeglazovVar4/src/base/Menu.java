/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package base;

import java.rmi.Naming;
import java.util.List;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

import types.Sushi;
import operation.SushiOperation;
import operation.SushiOperationDirectory;
import types.SushiDirectory;

/**
 *
 * @author dvoeg
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sushi = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        sushiTable = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        addButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        calculateButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        sushiExitButton = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        deleteRow = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        priceOfOrder = new javax.swing.JTextField();
        directory = new javax.swing.JFrame();
        jToolBar2 = new javax.swing.JToolBar();
        directorySushiAddButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        exitDirectoryButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        deleteDirectoryRow = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        directoryTable = new javax.swing.JTable();
        sushiAddDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        pnlConstruct = new javax.swing.JPanel();
        rdbNoParam = new javax.swing.JRadioButton();
        rdbYesParam = new javax.swing.JRadioButton();
        btnCancel = new javax.swing.JButton();
        addSushiButton = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        priceInfoLabel = new javax.swing.JLabel();
        sushiPrice = new javax.swing.JScrollBar();
        sushiQuantity = new javax.swing.JSpinner();
        weightLabel = new javax.swing.JLabel();
        sushiWeight = new javax.swing.JScrollBar();
        weightInfoLabel = new javax.swing.JLabel();
        sushiNameCombobox = new javax.swing.JComboBox<>();
        buttonGroup = new javax.swing.ButtonGroup();
        directoryDialogAddItems = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        itemName = new javax.swing.JTextField();
        itemDescription = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        itemDescriptionField = new javax.swing.JTextArea();
        addNewItem = new javax.swing.JButton();
        itemTypeLabel = new javax.swing.JLabel();
        typeCombobox = new javax.swing.JComboBox<>();
        cancelDialogButton = new javax.swing.JButton();
        menuLabel = new javax.swing.JLabel();
        sushiButton = new javax.swing.JButton();
        directoryButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        sushi.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                sushiWindowOpened(evt);
            }
        });

        sushiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "№", "Название", "Кол-во штук", "Вес", "Цена"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(sushiTable);

        jToolBar1.setRollover(true);

        addButton.setText("Добавить");
        addButton.setFocusable(false);
        addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addButton);
        jToolBar1.add(jSeparator1);

        calculateButton.setText("Вычислить");
        calculateButton.setFocusable(false);
        calculateButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        calculateButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(calculateButton);
        jToolBar1.add(jSeparator2);

        sushiExitButton.setText("Выход");
        sushiExitButton.setFocusable(false);
        sushiExitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sushiExitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sushiExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sushiExitButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(sushiExitButton);
        jToolBar1.add(jSeparator5);

        deleteRow.setText("Удалить");
        deleteRow.setFocusable(false);
        deleteRow.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteRow.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowActionPerformed(evt);
            }
        });
        jToolBar1.add(deleteRow);

        jLabel1.setText("Сумма заказа");

        javax.swing.GroupLayout sushiLayout = new javax.swing.GroupLayout(sushi.getContentPane());
        sushi.getContentPane().setLayout(sushiLayout);
        sushiLayout.setHorizontalGroup(
            sushiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sushiLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priceOfOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(sushiLayout.createSequentialGroup()
                .addGroup(sushiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        sushiLayout.setVerticalGroup(
            sushiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sushiLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sushiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(priceOfOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        directory.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                directoryWindowOpened(evt);
            }
        });

        jToolBar2.setRollover(true);

        directorySushiAddButton.setText("Добавить");
        directorySushiAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directorySushiAddButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(directorySushiAddButton);
        jToolBar2.add(jSeparator3);

        exitDirectoryButton.setText("Выход");
        exitDirectoryButton.setFocusable(false);
        exitDirectoryButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitDirectoryButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exitDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitDirectoryButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(exitDirectoryButton);
        jToolBar2.add(jSeparator4);

        deleteDirectoryRow.setText("Удалить");
        deleteDirectoryRow.setFocusable(false);
        deleteDirectoryRow.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteDirectoryRow.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteDirectoryRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDirectoryRowActionPerformed(evt);
            }
        });
        jToolBar2.add(deleteDirectoryRow);

        directoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название", "Тип", "Описание"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(directoryTable);
        if (directoryTable.getColumnModel().getColumnCount() > 0) {
            directoryTable.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        javax.swing.GroupLayout directoryLayout = new javax.swing.GroupLayout(directory.getContentPane());
        directory.getContentPane().setLayout(directoryLayout);
        directoryLayout.setHorizontalGroup(
            directoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
            .addGroup(directoryLayout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        directoryLayout.setVerticalGroup(
            directoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(directoryLayout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        sushiAddDialog.setTitle("Окно ввода");
        sushiAddDialog.setAutoRequestFocus(false);
        sushiAddDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sushiAddDialog.setName("sushiAddDialog"); // NOI18N

        pnlConstruct.setBorder(javax.swing.BorderFactory.createTitledBorder("Конструктор"));

        buttonGroup.add(rdbNoParam);
        rdbNoParam.setText("без параметров");
        rdbNoParam.setName("rdbNoParam"); // NOI18N

        buttonGroup.add(rdbYesParam);
        rdbYesParam.setText("с параметрами");
        rdbYesParam.setName("rdbYesParam"); // NOI18N

        javax.swing.GroupLayout pnlConstructLayout = new javax.swing.GroupLayout(pnlConstruct);
        pnlConstruct.setLayout(pnlConstructLayout);
        pnlConstructLayout.setHorizontalGroup(
            pnlConstructLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConstructLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(rdbNoParam, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rdbYesParam)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        pnlConstructLayout.setVerticalGroup(
            pnlConstructLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConstructLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlConstructLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbNoParam)
                    .addComponent(rdbYesParam))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        btnCancel.setText("Отменить");
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        addSushiButton.setText("Добавить");
        addSushiButton.setName("addSushiButton"); // NOI18N
        addSushiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSushiButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addComponent(pnlConstruct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(addSushiButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlConstruct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(addSushiButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblName.setText("Наименование");
        lblName.setName("lblName"); // NOI18N

        quantityLabel.setText("Количество");
        quantityLabel.setName("quantityLabel"); // NOI18N

        lblPrice.setText("Цена");
        lblPrice.setName("lblPrice"); // NOI18N

        priceInfoLabel.setText("500");
        priceInfoLabel.setName("priceInfoLabel"); // NOI18N

        sushiPrice.setMaximum(1000);
        sushiPrice.setMinimum(10);
        sushiPrice.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        sushiPrice.setValue(500);
        sushiPrice.setName("sushiPrice"); // NOI18N
        sushiPrice.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                sushiPriceAdjustmentValueChanged(evt);
            }
        });

        sushiQuantity.setModel(new javax.swing.SpinnerNumberModel(10, 1, 30, 2));
        sushiQuantity.setName("sushiQuantity");

        weightLabel.setText("Вес (в граммах)");

        sushiWeight.setMaximum(1000);
        sushiWeight.setMinimum(10);
        sushiWeight.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        sushiWeight.setValue(500);
        sushiWeight.setName("sushiPrice"); // NOI18N
        sushiWeight.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                sushiWeightAdjustmentValueChanged(evt);
            }
        });

        weightInfoLabel.setText("500");
        weightInfoLabel.setName("priceInfoLabel"); // NOI18N

        sushiNameCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Яки (Суши)", "Нигири (Суши)", "Спайси (Суши)", "Инь-Янь (Роллы)", "Филадельфия (Роллы)", "Калифорния (Роллы)" }));

        javax.swing.GroupLayout sushiAddDialogLayout = new javax.swing.GroupLayout(sushiAddDialog.getContentPane());
        sushiAddDialog.getContentPane().setLayout(sushiAddDialogLayout);
        sushiAddDialogLayout.setHorizontalGroup(
            sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sushiAddDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(sushiAddDialogLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sushiAddDialogLayout.createSequentialGroup()
                        .addComponent(lblPrice)
                        .addGroup(sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sushiAddDialogLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                                .addComponent(weightInfoLabel)
                                .addGap(133, 133, 133))
                            .addGroup(sushiAddDialogLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(sushiPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(sushiAddDialogLayout.createSequentialGroup()
                        .addComponent(weightLabel)
                        .addGap(33, 33, 33)
                        .addComponent(sushiWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(sushiAddDialogLayout.createSequentialGroup()
                        .addGroup(sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(quantityLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sushiQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sushiNameCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sushiAddDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(priceInfoLabel)
                .addGap(134, 134, 134))
        );
        sushiAddDialogLayout.setVerticalGroup(
            sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sushiAddDialogLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName)
                    .addComponent(sushiNameCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantityLabel)
                    .addComponent(sushiQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(weightInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sushiAddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sushiAddDialogLayout.createSequentialGroup()
                        .addComponent(weightLabel)
                        .addGap(58, 58, 58)
                        .addComponent(lblPrice))
                    .addGroup(sushiAddDialogLayout.createSequentialGroup()
                        .addComponent(sushiWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(priceInfoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sushiPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        lblName.getAccessibleContext().setAccessibleName("Название");

        jLabel2.setText("Название");

        itemDescription.setText("Описание");

        itemDescriptionField.setColumns(20);
        itemDescriptionField.setRows(5);
        jScrollPane3.setViewportView(itemDescriptionField);

        addNewItem.setText("Добавить");
        addNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewItemActionPerformed(evt);
            }
        });

        itemTypeLabel.setText("Тип");

        typeCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Суши", "Роллы" }));
        typeCombobox.setToolTipText("");

        cancelDialogButton.setText("Отменить");
        cancelDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDialogButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout directoryDialogAddItemsLayout = new javax.swing.GroupLayout(directoryDialogAddItems.getContentPane());
        directoryDialogAddItems.getContentPane().setLayout(directoryDialogAddItemsLayout);
        directoryDialogAddItemsLayout.setHorizontalGroup(
            directoryDialogAddItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(directoryDialogAddItemsLayout.createSequentialGroup()
                .addGroup(directoryDialogAddItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(directoryDialogAddItemsLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(itemDescription))
                    .addGroup(directoryDialogAddItemsLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(directoryDialogAddItemsLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(itemTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(directoryDialogAddItemsLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(directoryDialogAddItemsLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(directoryDialogAddItemsLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(addNewItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(cancelDialogButton)
                .addGap(61, 61, 61))
        );
        directoryDialogAddItemsLayout.setVerticalGroup(
            directoryDialogAddItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(directoryDialogAddItemsLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(directoryDialogAddItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemTypeLabel)
                    .addComponent(typeCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(itemDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(directoryDialogAddItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewItem)
                    .addComponent(cancelDialogButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        menuLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        menuLabel.setText("МЕНЮ");
        menuLabel.setToolTipText("");
        menuLabel.setName("menuLabel"); // NOI18N

        sushiButton.setText("Суши/Роллы");
        sushiButton.setToolTipText("");
        sushiButton.setName("sushiButton"); // NOI18N
        sushiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sushiButtonActionPerformed(evt);
            }
        });

        directoryButton.setText("Справочник");
        directoryButton.setName("directoryButton"); // NOI18N
        directoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directoryButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Выход");
        exitButton.setName("exitButton"); // NOI18N
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(menuLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sushiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(menuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(sushiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
static SushiOperation sushiOperation = null;
    static SushiOperationDirectory sushiOperationDirectory = null;
    static DefaultTableModel model = new DefaultTableModel();
    static DefaultTableModel model2 = new DefaultTableModel();
    private void sushiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sushiButtonActionPerformed
        sushi.setSize(500, 500);
        sushi.setVisible(true);
    }//GEN-LAST:event_sushiButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        setDefaultCloseOperation(this.EXIT_ON_CLOSE);
        System.exit(0);         // TODO add your handling code here:
    }//GEN-LAST:event_exitButtonActionPerformed

    private void directoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directoryButtonActionPerformed
        directory.setSize(500, 255);
        directory.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_directoryButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        sushiAddDialog.setSize(430, 450);
        sushiAddDialog.setVisible(true);   // TODO add your handling code here:
    }//GEN-LAST:event_addButtonActionPerformed

    private void addSushiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSushiButtonActionPerformed

        sushiAddDialog.setVisible(false);

        Sushi element;

        if (rdbYesParam.isSelected()) {

            element = new Sushi(sushiNameCombobox.getSelectedItem().toString(), (int) sushiQuantity.getValue(), sushiWeight.getValue(), sushiPrice.getValue());

        } else {

            element = new Sushi();

            element.setName(sushiNameCombobox.getSelectedItem().toString());

            element.setQuantity((int) sushiQuantity.getValue());

            element.setWeight(sushiWeight.getValue());

            element.setPrice(sushiPrice.getValue());

        }
        try {
            output(sushiOperation.addNewSushi(element));
        } catch (Exception ex) {

            ex.printStackTrace();

            JOptionPane.showMessageDialog(this, "Не удалось установить соединение с сервером:" + ex.getMessage() + ".",
                    "Ошибка",
                    JOptionPane.ERROR_MESSAGE);

        }// TODO add your handling code here:
    }//GEN-LAST:event_addSushiButtonActionPerformed

    private void sushiWeightAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_sushiWeightAdjustmentValueChanged
        weightInfoLabel.setText(Integer.toString((int) sushiWeight.getValue()));        // TODO add your handling code here:
    }//GEN-LAST:event_sushiWeightAdjustmentValueChanged

    private void sushiPriceAdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_sushiPriceAdjustmentValueChanged
        priceInfoLabel.setText(Integer.toString((int) sushiPrice.getValue()));          // TODO add your handling code here:
    }//GEN-LAST:event_sushiPriceAdjustmentValueChanged

    private void sushiWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_sushiWindowOpened

        try {
            sushiOperation = (SushiOperation) Naming.lookup("//localhost:1199/rmiTest02");
            model = (DefaultTableModel) sushiTable.getModel();
        } catch (Exception ex) {

            ex.printStackTrace();

            JOptionPane.showMessageDialog(this, "Не удалось установить соединение с сервером:" + ex.getMessage() + ".",
                    "Ошибка",
                    JOptionPane.ERROR_MESSAGE);

        }

// TODO add your handling code here:
    }//GEN-LAST:event_sushiWindowOpened

    private void sushiExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sushiExitButtonActionPerformed
        sushi.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_sushiExitButtonActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        try {
            priceOfOrder.setText(Integer.toString(sushiOperation.getSumOfSushi()));
        } catch (Exception ex) {

            ex.printStackTrace();

            JOptionPane.showMessageDialog(this, "Не удалось установить соединение с сервером:" + ex.getMessage() + ".",
                    "Ошибка",
                    JOptionPane.ERROR_MESSAGE);

        }  // TODO add your handling code here:
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void directorySushiAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directorySushiAddButtonActionPerformed
        directoryDialogAddItems.setVisible(true);
        directoryDialogAddItems.setSize(380, 330);// TODO add your handling code here:
    }//GEN-LAST:event_directorySushiAddButtonActionPerformed

    private void addNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewItemActionPerformed
        directoryDialogAddItems.setVisible(false);

        SushiDirectory element;

        element = new SushiDirectory(itemName.getText().toString(), typeCombobox.getSelectedItem().toString(), itemDescriptionField.getText().toString());
        try {
            output2(sushiOperationDirectory.addNewSushiDirectory(element));
        } catch (Exception ex) {

            ex.printStackTrace();

            JOptionPane.showMessageDialog(this, "Не удалось установить соединение с сервером:" + ex.getMessage() + ".",
                    "Ошибка",
                    JOptionPane.ERROR_MESSAGE);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_addNewItemActionPerformed

    private void cancelDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDialogButtonActionPerformed
        directoryDialogAddItems.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_cancelDialogButtonActionPerformed

    private void exitDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitDirectoryButtonActionPerformed
        directory.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_exitDirectoryButtonActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        sushiAddDialog.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void deleteDirectoryRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDirectoryRowActionPerformed
        if (directoryTable.getSelectedRowCount() == 1) {
            model2.removeRow(directoryTable.getSelectedRow());
        } else {
            if (directoryTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty!");
            } else {
                JOptionPane.showMessageDialog(this, "Select a row to delete!");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteDirectoryRowActionPerformed

    private void deleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowActionPerformed
        if (sushiTable.getSelectedRowCount() == 1) {
            model.removeRow(sushiTable.getSelectedRow());
        } else {
            if (sushiTable.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty!");
            } else {
                JOptionPane.showMessageDialog(this, "Select a row to delete!");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_deleteRowActionPerformed

    private void directoryWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_directoryWindowOpened
       try {
            sushiOperationDirectory = (SushiOperationDirectory) Naming.lookup("//localhost:1199/rmiTest01");
            model2 = (DefaultTableModel) directoryTable.getModel();
            output2(sushiOperationDirectory.getListOfSushiDirectory());
        } catch (Exception ex) {

            ex.printStackTrace();

            JOptionPane.showMessageDialog(this, "Не удалось установить соединение с сервером:" + ex.getMessage() + ".",
                    "Ошибка",
                    JOptionPane.ERROR_MESSAGE);

        }         // TODO add your handling code here:
    }//GEN-LAST:event_directoryWindowOpened

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened
private void output(List<Sushi> lstSushi) {

        clearTable();

        int i = 1;

        for (Sushi sushi : lstSushi) {

            Object[] rowData = new Object[5];

            rowData[0] = i++;

            rowData[1] = sushi.getName();

            rowData[2] = sushi.getQuantity();

            rowData[3] = sushi.getWeight();

            rowData[4] = sushi.getPrice() * sushi.getQuantity();

            model.addRow(rowData);

        }

    }

    private void output2(List<SushiDirectory> lstSushiDirectory) {

        clearTable();

        for (SushiDirectory sushidirectory : lstSushiDirectory) {

            Object[] rowData = new Object[3];

            rowData[0] = sushidirectory.getItemName();

            rowData[1] = sushidirectory.getItemType();

            rowData[2] = sushidirectory.getItemDescription();
            model2.addRow(rowData);

        }

    }

    private void clearTable() {

        while (model.getRowCount() > 0) {

            model.removeRow(0);

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu

.class  


.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu

.class  


.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu

.class  


.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu

.class  


.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addNewItem;
    private javax.swing.JButton addSushiButton;
    private javax.swing.JButton btnCancel;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton calculateButton;
    private javax.swing.JButton cancelDialogButton;
    private javax.swing.JButton deleteDirectoryRow;
    private javax.swing.JButton deleteRow;
    private javax.swing.JFrame directory;
    private javax.swing.JButton directoryButton;
    private javax.swing.JDialog directoryDialogAddItems;
    private javax.swing.JButton directorySushiAddButton;
    private javax.swing.JTable directoryTable;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton exitDirectoryButton;
    private javax.swing.JLabel itemDescription;
    private javax.swing.JTextArea itemDescriptionField;
    private javax.swing.JTextField itemName;
    private javax.swing.JLabel itemTypeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel menuLabel;
    private javax.swing.JPanel pnlConstruct;
    private javax.swing.JLabel priceInfoLabel;
    private javax.swing.JTextField priceOfOrder;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JRadioButton rdbNoParam;
    private javax.swing.JRadioButton rdbYesParam;
    private javax.swing.JFrame sushi;
    private javax.swing.JDialog sushiAddDialog;
    private javax.swing.JButton sushiButton;
    private javax.swing.JButton sushiExitButton;
    private javax.swing.JComboBox<String> sushiNameCombobox;
    private javax.swing.JScrollBar sushiPrice;
    private javax.swing.JSpinner sushiQuantity;
    private javax.swing.JTable sushiTable;
    private javax.swing.JScrollBar sushiWeight;
    private javax.swing.JComboBox<String> typeCombobox;
    private javax.swing.JLabel weightInfoLabel;
    private javax.swing.JLabel weightLabel;
    // End of variables declaration//GEN-END:variables
}
